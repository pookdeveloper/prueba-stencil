/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MpfToggle {
        /**
          * If `true`, the user cannot interact with the toggle.
         */
        "disabled": boolean;
        /**
          * Label name for switch
         */
        "label": string;
        /**
          * Label name for switch
         */
        "labelposition": string;
        /**
          * The name of the control, which is submitted with the form data.
         */
        "name": string;
        /**
          * If `true`, the toggle is selected.
         */
        "selected": boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
declare global {
    interface HTMLMpfToggleElement extends Components.MpfToggle, HTMLStencilElement {
    }
    var HTMLMpfToggleElement: {
        prototype: HTMLMpfToggleElement;
        new (): HTMLMpfToggleElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "mpf-toggle": HTMLMpfToggleElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface MpfToggle {
        /**
          * If `true`, the user cannot interact with the toggle.
         */
        "disabled"?: boolean;
        /**
          * Label name for switch
         */
        "label"?: string;
        /**
          * Label name for switch
         */
        "labelposition"?: string;
        /**
          * The name of the control, which is submitted with the form data.
         */
        "name"?: string;
        /**
          * Emitted when the toggle loses focus.
         */
        "onMpfBlur"?: (event: CustomEvent<void>) => void;
        /**
          * Emitted when the value property has changed.
         */
        "onMpfChange"?: (event: CustomEvent<boolean>) => void;
        /**
          * Emitted when the toggle has focus.
         */
        "onMpfFocus"?: (event: CustomEvent<void>) => void;
        /**
          * If `true`, the toggle is selected.
         */
        "selected"?: boolean;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "mpf-toggle": MpfToggle;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "mpf-toggle": LocalJSX.MpfToggle & JSXBase.HTMLAttributes<HTMLMpfToggleElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
